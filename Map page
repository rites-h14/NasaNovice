<!DOCTYPE html>
<html>
<head>
  <title>GeoTIFF Viewer</title>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
  <style>
    #map { height: 100vh; margin: 0; padding: 0; }
    body { margin: 0; }
  </style>
</head>
<body>

<div id="map"></div>

<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<script src="https://unpkg.com/georaster-layer-for-leaflet/dist/georaster-layer-for-leaflet.min.js"></script>
<script src="https://unpkg.com/georaster/dist/georaster.min.js"></script>

<script>
  var map = L.map('map').setView([0, 0], 2); // Initial map view

  // Add OpenStreetMap base layer
  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 19,
  }).addTo(map);

  // URL to your GeoTIFF
  const tiffUrl = 'https://example.com/your-file.tif';

  fetch(tiffUrl)
    .then(response => response.arrayBuffer())
    .then(arrayBuffer => {
      parseGeoraster(arrayBuffer).then(georaster => {
        const layer = new GeoRasterLayer({
          georaster: georaster,
          opacity: 0.7,
          pixelValuesToColorFn: pixelValues => {
            // Simple grayscale rendering example
            const [r, g, b] = pixelValues;
            if (r === 0 && g === 0 && b === 0) return null; // transparent for 0 values
            const grayscale = r || g || b;
            return `rgb(${grayscale},${grayscale},${grayscale})`;
          }
        });
        layer.addTo(map);
        map.fitBounds(layer.getBounds());
      });
    });
</script>

</body>
</html>
