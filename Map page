<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Leaflet GeoTIFF Viewer with Click Counter</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />

  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
  
  <style>
    body, html { margin: 0; height: 100%; }
    #map { width: 100%; height: 100vh; }
    
    /* Notification styling */
    #clickNotification {
      position: absolute;
      top: 20px;
      right: 20px;
      background: rgba(0, 123, 255, 0.85);
      color: white;
      font-weight: bold;
      padding: 10px 20px;
      border-radius: 5px;
      font-family: sans-serif;
      font-size: 18px;
      opacity: 0;
      animation: blink 1s ease-in-out 3;
      pointer-events: none;
      z-index: 1000;
    }

    @keyframes blink {
      0%, 100% { opacity: 0; }
      50% { opacity: 1; }
    }
  </style>
</head>
<body>

<div id="map"></div>
<div id="clickNotification"></div>

<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<script src="https://unpkg.com/georaster/dist/georaster.min.js"></script>
<script src="https://unpkg.com/georaster-layer-for-leaflet/dist/georaster-layer-for-leaflet.min.js"></script>

<script>
  const map = L.map('map').setView([0, 0], 2);

  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 19,
    attribution: '&copy; OpenStreetMap contributors'
  }).addTo(map);

  const tiffUrl = 'https://github.com/rites-h14/NasaNovice/raw/bee521a0701682c3425e827fead0be69031c7c8c/GHS_SMOD_E2030_GLOBE_R2023A_54009_1000_V2_0_R7_C26.tif';

  fetch(tiffUrl)
    .then(res => res.arrayBuffer())
    .then(arrayBuffer => parseGeoraster(arrayBuffer))
    .then(georaster => {
      const layer = new GeoRasterLayer({
        georaster: georaster,
        opacity: 0.7,
        pixelValuesToColorFn: pixelValues => {
          let v = pixelValues[0];
          if (v === 0) return null;
          const gray = Math.min(255, Math.max(0, v));
          return `rgb(${gray},${gray},${gray})`;
        }
      });
      layer.addTo(map);
      map.fitBounds(layer.getBounds());
    });

  // Click counter and notification
  let clickCount = 0;
  const notification = document.getElementById('clickNotification');

  map.on('click', () => {
    clickCount++;
    notification.textContent = `Click ${clickCount}`;
    notification.style.animation = 'none'; // reset animation
    // trigger reflow to restart animation
    void notification.offsetWidth;
    notification.style.animation = 'blink 1s ease-in-out 3';
    notification.style.opacity = 1;
  });
</script>

</body>
</html>
